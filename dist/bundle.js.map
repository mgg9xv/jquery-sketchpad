{"version":3,"sources":["webpack:///webpack/bootstrap d3ffa9f157ba4f789433","webpack:///./src/scss/style.scss","webpack:///./src/js/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,yC;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC,0CAA0C;AAC1C,0CAA0C;AAC1C,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;;AAEtE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d3ffa9f157ba4f789433","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scss/style.scss\n// module id = 0\n// module chunks = 0","$(document).ready(function(){\n\n    // Initialize state\n    var state = {\n        drawing: false,\n        gridSize: 16,\n        paintRGBA: 'rgba(0,128,255,0.5)'\n    };\n\n    // Initializing functions\n    setupPixelGrid(state.gridSize);\n    resizePixelGrid();\n    updatePaintPreview();\n\n    // Updates the paint/paint preview component when color or opacity changes\n    function updatePaintPreview() {\n        var paintColor = $('#paint-color-input').val();\n        var paintOpacity = $('#paint-opacity-input').val();\n\n        state.paintRGBA = 'rgba(' + hexToR(paintColor) +\n            ',' + hexToG(paintColor) +\n            ',' + hexToB(paintColor) +\n            ',' + paintOpacity / 100 + ')';\n\n        $('#paint-preview').css('background-color', state.paintRGBA);\n    }\n\n    // Animates the menu sidebar to open or close\n    function changeMenuState () {\n        var controlSection = $('#control-section');\n        var gridSection = $('#grid-section');\n        controlSection.toggleClass('control-section-visible');\n        gridSection.toggleClass('grid-section-visible');\n    }\n\n    // Resets the pixel grid by changing remvong the pixels\n    function resetPixelGrid(){\n        $('#grid-table').empty();\n        var gridSize = $('#grid-size-input').val();\n        state.gridSize = gridSize;\n        setupPixelGrid(gridSize);\n    }\n\n    // Setup all the pixels in the grid based on the grid size given\n    function setupPixelGrid(gridSize){\n        for ( var i = 0; i < gridSize; i++) {\n            $('#grid-table').append('<tr></tr>');\n            for ( var j = 0; j < gridSize; j++) {\n                var pixelId = \"x\" + j + \"y\" + i;\n                $('tr:last-child').append(\"<td id='\" + pixelId + \"' class='pixel'></td>\");\n            }\n        }\n    }\n\n    // Downloads the pixelpad image as a png file\n    function downloadImage(link){\n\n        // Setup an HTML canvas that isn't added to DOM but used to create a png\n        // that the user downloads\n        var canvas = document.createElement(\"canvas\");\n        var ctx = canvas.getContext(\"2d\");\n        var pixels = state.gridSize;\n        canvas.width = pixels;\n        canvas.height = pixels;\n\n        // Get canvas imageData so that we can loop through it\n        var imgData = ctx.getImageData(0,0,pixels,pixels);\n        var data = imgData.data;\n\n        for( var i = 0; i < data.length; i += 4){\n\n            // Get the background-color css attribute of each grid cell\n            var rgba = [];\n            var pixel_index = (i / 4);\n            var backgroundColor = $('tr td:eq(' + pixel_index + ')').css('background-color');\n\n            // Parse out RGB value from the background-color attribute\n            if( backgroundColor.indexOf('rgba') === -1) {\n                backgroundColor = backgroundColor.replace(\"rgb(\", '');\n                backgroundColor = backgroundColor.replace(\")\",'');\n                backgroundColor = backgroundColor.replace(/,/g,'');\n                rgba = backgroundColor.split(' ');\n                rgba.push(1);\n            } else {\n                backgroundColor = backgroundColor.replace(\"rgba(\", '');\n                backgroundColor = backgroundColor.replace(\")\",'');\n                backgroundColor = backgroundColor.replace(/,/g,'');\n                rgba = backgroundColor.split(' ');\n            }\n\n            // Set the canvas pixel data to match the grid cell color\n            data[i] = parseInt(rgba[0]); // red\n            data[i+1] = parseInt(rgba[1]); // green\n            data[i+2] = parseInt(rgba[2]); // blue\n            data[i+3] = rgba[3] * 255; // opacity\n        }\n\n        // Set image data for the canvas image to be downloaded\n        imgData.data = data;\n        ctx.putImageData(imgData,0,0);\n        link.href= canvas.toDataURL();\n\n        // Get file name to save image under\n        var fileName = $('#file-name-input').val();\n        link.download = fileName ? fileName : 'image.png';\n    }\n\n    // Resizes the pixel grid to fit nicely inside of the #grid-section\n    function resizePixelGrid(){\n        var width = $('#grid-section').width();\n        var height = $('#grid-section').height();\n        if( height < width) {\n            $('#grid-container').height(height - (height * 0.05));\n            $('#grid-container').width(height - (height * 0.05));\n        } else {\n            $('#grid-container').height(width - (width * 0.05));\n            $('#grid-container').width(width - (width * 0.05));\n        }\n    }\n\n    // Toggle grid lines based on grid-toggle checkbox\n    function toggleGridLines(){\n        if( this === document || this.checked) {\n            $('table, th, td ').css('border','1px solid black');\n        } else {\n            $('table, th, td ').css('border','none');\n        }\n    }\n\n    // Updates the grid size input to reflect the value the user has given\n    function updateGridSizeAddon() {\n        var newSize = $(this).val();\n        $('#grid-size-addon').text('x' + newSize);\n    }\n\n    // Taken from http://www.javascripter.net/faq/hextorgb.htm\n    function hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16);}\n    function hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16);}\n    function hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16);}\n    function cutHex(h) {return (h.charAt(0)==\"#\") ? h.substring(1,7):h;}\n\n    // Event listening function calls\n    $(window).on('resize', resizePixelGrid);\n    $('#control-section-button').on('click', changeMenuState);\n    $('#paint-color-input').on('change', updatePaintPreview);\n    $('#paint-opacity-input').on('change', updatePaintPreview);\n    $('#grid-size-input').on('change', updateGridSizeAddon);\n    $('#grid-toggle').on('change', toggleGridLines);\n    $('#reset-grid-button').on('click', resetPixelGrid);\n    $('#download-button').on('click', function(){downloadImage(this);});\n\n    // Painting functions\n    $(document).on('mousedown touchstart','.pixel', function(event){\n        event.preventDefault();\n        $(this).css('background-color', state.paintRGBA);\n        state.drawing = true;\n    });\n    $(document).on('mouseover','.pixel', function(event){\n        event.preventDefault();\n        if (state.drawing) {\n            $(this).css('background-color', state.paintRGBA);\n        }\n    });\n    $(document).on('touchmove', '.pixel', function(event){\n        event.preventDefault();\n        var touchedlement = document.elementFromPoint(event.originalEvent.touches[0].clientX, event.originalEvent.touches[0].clientY);\n        if($(touchedlement).hasClass('pixel')){\n            $(touchedlement).css('background-color', state.paintRGBA);\n        }\n    });\n    $(document).on('mouseup touchend', '.pixel', function(event){\n        event.preventDefault();\n        state.drawing = false;\n    });\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/index.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}